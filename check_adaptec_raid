#!/usr/bin/perl -w


use strict;
use warnings;
use Getopt::Long qw(:config no_ignore_case);
use IPC::Run3;
use Data::Dumper;


our $VERBOSITY = 0;
our $VERSION = '0.0';

use constant { 
	STATE_OK => 0,
	STATE_WARNING => 1,
	STATE_CRITICAL => 2,
	STATE_UNKNOWN => 3,
 };


sub displayUsage {
	#foobar strings
}

sub displayHelp {
	#foobar strings
}
 
sub displayVersion {
	# Get arcconf VERSION, controller name, + VERSION of plugin 
}


sub getAdapCfg {
	
	my $sudo = $_[0];
	my $arcconf = $_[1];
	my $controller = $_[2]; 
	my @output = `$sudo $arcconf GETCONFIG $controller AD`; #seems to parse every line in its own variable
	print Dumper(@output) if $VERBOSITY == 3;

}

sub getPhysCfg {
	
}

sub getLogCfg {
	
}


sub myExit {
		print $_[1];
		exit ($_[2]);
}

MAIN: {
	my $controller = 1;
	my @logDevices; 
	my @physDevices;
	my $sudo = '/usr/bin/sudo'; #check_arc all nopasswd: /usr/bin/arcconf GETCONFIG *
	my $arcconf = '/usr/bin/arcconf';
	
	unless ( -e $arcconf or -x $sudo ) { print 'Perm. denied!'; die; }
	
	if ( !(GetOptions(
		'v|verbose' => sub {$VERBOSITY = 1 },
		'vv' => sub {$VERBOSITY = 2},
		'vvv' => sub {$VERBOSITY = 3},
		'h|help' => sub {displayHelp();},
		'V|version' => sub {displayVersion();},
		'C|controller=i' => \$controller,
		'LD|logicaldevice=i@' => \@logDevices,
		'PD|physicaldevice=i@' => \@physDevices, 
		
	)))	{
		displayUsage();
	}
	getAdapCfg($sudo, $arcconf, $controller);
}